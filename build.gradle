buildscript {

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:1.8.1"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply from: "$rootDir/gradle/libraries.gradle"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.serenity-bdd.aggregator'

repositories {
    jcenter()
}

sourceSets {
    integration_test {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integration_testCompile.extendsFrom testCompile
    integration_testRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integration_test.output.classesDirs
    classpath = sourceSets.integration_test.runtimeClasspath
}

dependencies {

    compile libs.aws.lambda.core,
            libs.aws.lambda.events,
            libs.apache.http.core,
            libs.javax.inject,
            libs.spring.core,
            libs.spring.context

    testCompile libs.test.serenity.core,
            libs.test.serenity.screenplay,
            libs.test.serenity.cucumber,
            libs.test.serenity.restAssured,
            libs.test.serenity.spring,
            libs.test.junit,
            libs.test.assertj,
            libs.test.spring.boot,
            libs.spring.boot.web
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)